{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ViewCart() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.cartReducer.selectedItems;\n  }),\n      items = _useSelector.items,\n      restaurantName = _useSelector.restaurantName;\n\n  var total = items.map(function (item) {\n    return Number(item.price.replace(\"$\", \"\"));\n  }).reduce(function (prev, curr) {\n    return prev + curr;\n  }, 0);\n  var totalUSD = total.toLocaleString(\"en\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n\n  var checkoutModalContent = function checkoutModalContent() {\n    return _jsx(_Fragment, {\n      children: _jsx(View, {\n        style: styles.modalContainer,\n        children: _jsx(View, {\n          style: styles.modalCheckoutContainer,\n          children: _jsx(Text, {\n            style: styles.restaurantName,\n            children: restaurantName\n          })\n        })\n      })\n    });\n  };\n\n  var styles = StyleSheet.create({\n    modalContainer: {\n      flex: 1,\n      justifyContent: 'flex-end',\n      backgroundColor: 'rgba(0,0,0,0.7)'\n    },\n    modalCheckoutContainer: {\n      height: 500,\n      padding: 16,\n      backgroundColor: 'white',\n      borderWidth: 1\n    },\n    restaurantName: {\n      textAlign: 'center',\n      fontWeight: '600',\n      fontSize: 18,\n      marginBottom: 10\n    },\n    subtotalContainer: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginTop: 15\n    },\n    subtotalText: {\n      textAlign: 'left',\n      fontWeight: '600',\n      fontSize: 15,\n      marginBottom: 10\n    }\n  });\n  return _jsxs(_Fragment, {\n    children: [_jsx(Modal, {\n      animationType: \"slide\",\n      visible: modalVisible,\n      transparent: true,\n      onRequestClose: function onRequestClose() {\n        return setModalVisible(false);\n      },\n      children: checkoutModalContent()\n    }), total ? _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: \"center\",\n        flexDirection: 'row',\n        bottom: '1%',\n        zIndex: 999,\n        position: 'relative'\n      },\n      children: _jsx(View, {\n        style: {\n          justifyContent: 'center',\n          width: \"100%\",\n          flexDirection: 'row'\n        },\n        children: _jsxs(TouchableOpacity, {\n          style: {\n            marginTop: 20,\n            backgroundColor: 'black',\n            alignItems: \"center\",\n            padding: 13,\n            borderRadius: 30,\n            width: 300,\n            position: 'relative',\n            flexDirection: 'row',\n            justifyContent: 'flex-end'\n          },\n          onPress: function onPress() {\n            return setModalVisible(true);\n          },\n          children: [_jsx(Text, {\n            style: {\n              color: 'white',\n              fontSize: 20,\n              marginRight: 90\n            },\n            children: \"View Cart \\uD83D\\uDED2\"\n          }), _jsx(Text, {\n            style: {\n              color: 'white',\n              fontSize: 20\n            },\n            children: totalUSD\n          })]\n        })\n      })\n    }) : _jsx(_Fragment, {})]\n  });\n}","map":{"version":3,"sources":["C:/Users/isagrawa/FoodDelivery/components/restaurantDetail/ViewCart.js"],"names":["React","useState","useSelector","ViewCart","modalVisible","setModalVisible","state","cartReducer","selectedItems","items","restaurantName","total","map","item","Number","price","replace","reduce","prev","curr","totalUSD","toLocaleString","style","currency","checkoutModalContent","styles","modalContainer","modalCheckoutContainer","StyleSheet","create","flex","justifyContent","backgroundColor","height","padding","borderWidth","textAlign","fontWeight","fontSize","marginBottom","subtotalContainer","flexDirection","marginTop","subtotalText","alignItems","bottom","zIndex","position","width","borderRadius","color","marginRight"],"mappings":"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","sourcesContent":["import { View, Text, Modal, TouchableOpacity, StyleSheet } from 'react-native'\r\nimport React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function ViewCart() {\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n\r\n    const { items, restaurantName } = useSelector((state) => state.cartReducer.selectedItems);\r\n    // const restaurantName = useSelector((state) => state.cartReducer.selectedItems);\r\n\r\n    const total = items\r\n        .map((item) => Number(item.price.replace(\"$\", \"\")))\r\n        .reduce((prev, curr) => prev + curr, 0);\r\n\r\n    const totalUSD = total.toLocaleString(\"en\", {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n    })\r\n\r\n    // console.log(totalUSD)\r\n\r\n    const checkoutModalContent = () => {\r\n        return (\r\n            <>\r\n                <View style={styles.modalContainer}>\r\n                    <View style={styles.modalCheckoutContainer}>\r\n                        <Text style={styles.restaurantName}>{restaurantName}</Text>\r\n                    </View>\r\n                </View>\r\n            </>\r\n        )\r\n    };\r\n\r\n    const styles = StyleSheet.create({\r\n        modalContainer: {\r\n            flex: 1,\r\n            justifyContent: 'flex-end',\r\n            backgroundColor: 'rgba(0,0,0,0.7)'\r\n        },\r\n\r\n        modalCheckoutContainer: {\r\n            height: 500,\r\n            padding: 16,\r\n            backgroundColor: 'white',\r\n            borderWidth: 1,\r\n        },\r\n\r\n        restaurantName: {\r\n            textAlign: 'center',\r\n            fontWeight: '600',\r\n            fontSize: 18,\r\n            marginBottom: 10,\r\n        },\r\n\r\n        subtotalContainer: {\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n            marginTop: 15,\r\n        },\r\n\r\n        subtotalText: {\r\n            textAlign: 'left',\r\n            fontWeight: '600',\r\n            fontSize: 15,\r\n            marginBottom: 10,\r\n        },\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                animationType='slide'\r\n                visible={modalVisible}\r\n                transparent={true}\r\n                onRequestClose={() => setModalVisible(false)}\r\n            >\r\n                {checkoutModalContent()}\r\n            </Modal>\r\n            {total ? (\r\n                <View style={{\r\n                    flex: 1,\r\n                    justifyContent: 'center',\r\n                    alignItems: \"center\",\r\n                    flexDirection: 'row',\r\n                    bottom: '1%',\r\n                    zIndex: 999,\r\n                    position: 'relative',\r\n                }}\r\n                >\r\n                    <View style={{\r\n                        justifyContent: 'center',\r\n                        width: \"100%\",\r\n                        flexDirection: 'row',\r\n                    }}\r\n                    >\r\n                        <TouchableOpacity style={{\r\n                            marginTop: 20,\r\n                            backgroundColor: 'black',\r\n                            alignItems: \"center\",\r\n                            padding: 13,\r\n                            borderRadius: 30,\r\n                            width: 300,\r\n                            position: 'relative',\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'flex-end'\r\n                        }}\r\n                            onPress={() => setModalVisible(true)}\r\n                        >\r\n                            <Text style={{ color: 'white', fontSize: 20, marginRight: 90 }}>View Cart 🛒</Text>\r\n                            <Text style={{ color: 'white', fontSize: 20, }}>{totalUSD}</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}