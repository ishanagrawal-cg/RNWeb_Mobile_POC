{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar defaultState = {\n  selectedItems: {\n    items: [],\n    restaurantName: \" \"\n  }\n};\n\nvar cartReducer = function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      {\n        var newState = _objectSpread({}, state);\n\n        newState.selectedItems = {\n          items: [].concat(_toConsumableArray(newState.selectedItems.items), [action.payload]),\n          restaurantName: action.payload.restaurantName\n        };\n        console.log(newState, \"ðŸ‘‰\");\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/isagrawa/FoodDelivery/redux/reducers/cartReducer.js"],"names":["defaultState","selectedItems","items","restaurantName","cartReducer","state","action","type","newState","payload","console","log"],"mappings":";;;;;;;AAAA,IAAIA,YAAY,GAAG;AACfC,EAAAA,aAAa,EAAE;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,cAAc,EAAE;AAA7B;AADA,CAAnB;;AAIA,IAAIC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AAAoB;AAChB,YAAIC,QAAQ,qBAAQH,KAAR,CAAZ;;AACAG,QAAAA,QAAQ,CAACP,aAAT,GAAyB;AACrBC,UAAAA,KAAK,+BAAMM,QAAQ,CAACP,aAAT,CAAuBC,KAA7B,IAAoCI,MAAM,CAACG,OAA3C,EADgB;AAErBN,UAAAA,cAAc,EAAEG,MAAM,CAACG,OAAP,CAAeN;AAFV,SAAzB;AAIAO,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsB,IAAtB;AACA,eAAOA,QAAP;AACH;;AAED;AACI,aAAOH,KAAP;AAZR;AAcH,CAfD;;AAiBA,eAAeD,WAAf","sourcesContent":["let defaultState = {\r\n    selectedItems: { items: [], restaurantName: \" \" },\r\n}\r\n\r\nlet cartReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_TO_CART\": {\r\n            let newState = { ...state };      //DEEP copy of original state\r\n            newState.selectedItems = {\r\n                items: [...newState.selectedItems.items, action.payload],\r\n                restaurantName: action.payload.restaurantName,\r\n            };\r\n            console.log(newState, \"ðŸ‘‰\")\r\n            return newState;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cartReducer"]},"metadata":{},"sourceType":"module"}