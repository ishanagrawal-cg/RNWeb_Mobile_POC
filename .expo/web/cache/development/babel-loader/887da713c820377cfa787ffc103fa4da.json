{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport MenuItems from \"../components/restaurantDetail/MenuItems\";\nimport firebase from \"../firebase\";\nimport { useState } from 'react';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function OrderCompleted() {\n  var _useState = useState({\n    items: [{\n      title: \"Lasagna\",\n      description: \"With butter lettuce, tomato and sauce\",\n      image: \"https://www.southsidepizzahk.com/wp-content/uploads/2021/03/Lasagne.jpeg\",\n      price: \"$14.50\"\n    }]\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      lastOrder = _useState2[0],\n      setLastOrder = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.cartReducer.selectedItems;\n  }),\n      items = _useSelector.items,\n      restaurantName = _useSelector.restaurantName;\n\n  var total = items.map(function (item) {\n    return Number(item.price.replace(\"$\", \"\"));\n  }).reduce(function (prev, curr) {\n    return prev + curr;\n  }, 0);\n  var totalUSD = total.toLocaleString(\"en\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n  useEffect(function () {\n    var db = firebase.firestore();\n    var unsubscribe = db.collection('orders').orderBy(\"createdAt\", \"desc\").limit(1).onSnapshot(function (snapshot) {\n      snapshot.docs.map(function (doc) {\n        setLastOrder(doc.data());\n      });\n    });\n    return unsubscribe;\n  }, []);\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    children: _jsxs(View, {\n      style: {\n        margin: 15,\n        alignItems: \"center\",\n        height: \"100%\"\n      },\n      children: [_jsxs(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: \"bold\"\n        },\n        children: [\"Your order at \", restaurantName, \" has been placed for \", totalUSD]\n      }), _jsx(ScrollView, {\n        children: _jsx(MenuItems, {\n          foods: lastOrder.items,\n          hideCheckBox: true,\n          marginLeft: 5\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/isagrawa/FoodDelivery/screens/OrderCompleted.js"],"names":["React","useEffect","useSelector","MenuItems","firebase","useState","OrderCompleted","items","title","description","image","price","lastOrder","setLastOrder","state","cartReducer","selectedItems","restaurantName","total","map","item","Number","replace","reduce","prev","curr","totalUSD","toLocaleString","style","currency","db","firestore","unsubscribe","collection","orderBy","limit","onSnapshot","snapshot","docs","doc","data","flex","backgroundColor","margin","alignItems","height","fontSize","fontWeight"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,eAAe,SAASC,cAAT,GAA0B;AACrC,kBAAkCD,QAAQ,CAAC;AACvCE,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,KAAK,EAAE,SADX;AAEIC,MAAAA,WAAW,EAAE,uCAFjB;AAGIC,MAAAA,KAAK,EAAE,0EAHX;AAIIC,MAAAA,KAAK,EAAE;AAJX,KADG;AADgC,GAAD,CAA1C;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AAWA,qBAAkCX,WAAW,CACzC,UAACY,KAAD;AAAA,WAAWA,KAAK,CAACC,WAAN,CAAkBC,aAA7B;AAAA,GADyC,CAA7C;AAAA,MAAQT,KAAR,gBAAQA,KAAR;AAAA,MAAeU,cAAf,gBAAeA,cAAf;;AAKA,MAAMC,KAAK,GAAGX,KAAK,CACdY,GADS,CACL,UAACC,IAAD;AAAA,WAAUC,MAAM,CAACD,IAAI,CAACT,KAAL,CAAWW,OAAX,CAAmB,GAAnB,EAAwB,EAAxB,CAAD,CAAhB;AAAA,GADK,EAETC,MAFS,CAEF,UAACC,IAAD,EAAOC,IAAP;AAAA,WAAgBD,IAAI,GAAGC,IAAvB;AAAA,GAFE,EAE2B,CAF3B,CAAd;AAIA,MAAMC,QAAQ,GAAGR,KAAK,CAACS,cAAN,CAAqB,IAArB,EAA2B;AACxCC,IAAAA,KAAK,EAAE,UADiC;AAExCC,IAAAA,QAAQ,EAAE;AAF8B,GAA3B,CAAjB;AAKA5B,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAM6B,EAAE,GAAG1B,QAAQ,CAAC2B,SAAT,EAAX;AACA,QAAMC,WAAW,GAAGF,EAAE,CACjBG,UADe,CACJ,QADI,EAEfC,OAFe,CAEP,WAFO,EAEM,MAFN,EAGfC,KAHe,CAGT,CAHS,EAIfC,UAJe,CAIJ,UAACC,QAAD,EAAc;AACtBA,MAAAA,QAAQ,CAACC,IAAT,CAAcnB,GAAd,CAAkB,UAACoB,GAAD,EAAS;AACvB1B,QAAAA,YAAY,CAAC0B,GAAG,CAACC,IAAJ,EAAD,CAAZ;AACH,OAFD;AAGH,KARe,CAApB;AAUA,WAAOR,WAAP;AAEH,GAdQ,EAcN,EAdM,CAAT;AAgBA,SACI,KAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAES,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,eAAe,EAAE;AAA5B,KAArB;AAAA,cACI,MAAC,IAAD;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,MAAM,EAAE,EADL;AAEHC,QAAAA,UAAU,EAAE,QAFT;AAGHC,QAAAA,MAAM,EAAE;AAHL,OADX;AAAA,iBAcI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,UAAU,EAAE;AAA5B,SAAb;AAAA,qCACmB9B,cADnB,2BACwDS,QADxD;AAAA,QAdJ,EAiBI,KAAC,UAAD;AAAA,kBACI,KAAC,SAAD;AAAW,UAAA,KAAK,EAAEd,SAAS,CAACL,KAA5B;AAAmC,UAAA,YAAY,EAAE,IAAjD;AAAuD,UAAA,UAAU,EAAE;AAAnE;AADJ,QAjBJ;AAAA;AADJ,IADJ;AA+BH","sourcesContent":["import { View, Text, SafeAreaView, ScrollView } from 'react-native'\r\nimport React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n// import LottieView from 'lottie-react-native';\r\nimport MenuItems from '../components/restaurantDetail/MenuItems';\r\nimport firebase from '../firebase'\r\nimport { useState } from 'react';\r\n\r\nexport default function OrderCompleted() {\r\n    const [lastOrder, setLastOrder] = useState({\r\n        items: [\r\n            {\r\n                title: \"Lasagna\",\r\n                description: \"With butter lettuce, tomato and sauce\",\r\n                image: \"https://www.southsidepizzahk.com/wp-content/uploads/2021/03/Lasagne.jpeg\",\r\n                price: \"$14.50\",\r\n            },\r\n        ],\r\n    })\r\n\r\n    const { items, restaurantName } = useSelector(\r\n        (state) => state.cartReducer.selectedItems\r\n    );\r\n    // const restaurantName = useSelector((state) => state.cartReducer.selectedItems);\r\n\r\n    const total = items\r\n        .map((item) => Number(item.price.replace(\"$\", \"\")))\r\n        .reduce((prev, curr) => prev + curr, 0);\r\n\r\n    const totalUSD = total.toLocaleString(\"en\", {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        const db = firebase.firestore();\r\n        const unsubscribe = db\r\n            .collection('orders')\r\n            .orderBy(\"createdAt\", \"desc\")\r\n            .limit(1)\r\n            .onSnapshot((snapshot) => {\r\n                snapshot.docs.map((doc) => {\r\n                    setLastOrder(doc.data())\r\n                });\r\n            });\r\n\r\n        return unsubscribe;\r\n        // return () => unsubscribe();\r\n    }, [])\r\n\r\n    return (\r\n        <SafeAreaView style={{ flex: 1, backgroundColor: 'white' }}>\r\n            <View\r\n                style={{\r\n                    margin: 15,\r\n                    alignItems: \"center\",\r\n                    height: \"100%\",\r\n                }}\r\n            >\r\n                {/* <LottieView\r\n                    style={{ height: 100, alignSelf: \"center\", marginBottom: 30 }}\r\n                    source={require(\"../assets/animations/check-mark.json\")}\r\n                    autoPlay\r\n                    speed={0.5}\r\n                    loop={false}\r\n                /> */}\r\n                <Text style={{ fontSize: 20, fontWeight: \"bold\" }}>\r\n                    Your order at {restaurantName} has been placed for {totalUSD}\r\n                </Text>\r\n                <ScrollView>\r\n                    <MenuItems foods={lastOrder.items} hideCheckBox={true} marginLeft={5}/>\r\n                    {/* <LottieView\r\n                        style={{ height: 200, alignSelf: \"center\" }}\r\n                        source={require(\"../assets/animations/cooking.json\")}\r\n                        autoPlay\r\n                        speed={0.5}\r\n                    /> */}\r\n                </ScrollView>\r\n            </View>\r\n        </SafeAreaView>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}